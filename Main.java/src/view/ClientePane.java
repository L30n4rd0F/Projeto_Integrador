/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import controller.ClienteController;
import controller.TextoController;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;

/**
 *
 * @author luizf
 */
public class ClientePane extends javax.swing.JPanel {
    
    CadastroClienteView viewCadastro = new CadastroClienteView();
    AtualizarClienteView viewAtualizar = new AtualizarClienteView();
    ClienteController controller;
    TextoController controllerTexto = new TextoController();
    
    public ClientePane() {
        initComponents();
        controller = new ClienteController(viewAtualizar, viewCadastro, this);
        
        refresh();
    }
    
    public void refresh(){
        try {
            controller.readTabelaCliente(getTabelaCliente());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro de conexão!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CampoPesquisaId = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        CampoPesquisaNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        CampoPesquisaCPF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaCliente = new javax.swing.JTable();
        BotaoCadastrarCliente = new javax.swing.JButton();
        BotaoLimparCamposCliente = new javax.swing.JButton();
        BotaoAtualizarCliente1 = new javax.swing.JButton();
        BotaoRemoverCliente = new javax.swing.JButton();
        BotaoVerHistoricoCliente = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        CampoPesquisaId.setEditable(false);
        CampoPesquisaId.setBackground(new java.awt.Color(220, 220, 220));
        CampoPesquisaId.setFocusable(false);

        jLabel1.setText("ID");

        CampoPesquisaNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoPesquisaNomeActionPerformed(evt);
            }
        });
        CampoPesquisaNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CampoPesquisaNomeKeyReleased(evt);
            }
        });

        jLabel2.setText("Nome");

        CampoPesquisaCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoPesquisaCPFActionPerformed(evt);
            }
        });
        CampoPesquisaCPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CampoPesquisaCPFKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CampoPesquisaCPFKeyTyped(evt);
            }
        });

        jLabel4.setText("CPF");

        TabelaCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "CPF", "Telefone", "Endereço"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabelaCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaClienteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TabelaCliente);

        BotaoCadastrarCliente.setText("Cadastrar");
        BotaoCadastrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoCadastrarClienteActionPerformed(evt);
            }
        });

        BotaoLimparCamposCliente.setText("Limpar Campos");
        BotaoLimparCamposCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoLimparCamposClienteActionPerformed(evt);
            }
        });

        BotaoAtualizarCliente1.setText("Alterar");
        BotaoAtualizarCliente1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoAtualizarCliente1ActionPerformed(evt);
            }
        });

        BotaoRemoverCliente.setText("Remover");
        BotaoRemoverCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoRemoverClienteActionPerformed(evt);
            }
        });

        BotaoVerHistoricoCliente.setText("Histórico de compras");
        BotaoVerHistoricoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoVerHistoricoClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(CampoPesquisaId, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CampoPesquisaNome, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(CampoPesquisaCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(BotaoLimparCamposCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BotaoCadastrarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(BotaoAtualizarCliente1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(BotaoRemoverCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(BotaoVerHistoricoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CampoPesquisaId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CampoPesquisaNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CampoPesquisaCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotaoLimparCamposCliente))
                .addGap(71, 71, 71)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotaoCadastrarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotaoAtualizarCliente1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotaoRemoverCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotaoVerHistoricoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(95, 95, 95))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void CampoPesquisaNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoPesquisaNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoPesquisaNomeActionPerformed

    private void CampoPesquisaCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoPesquisaCPFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoPesquisaCPFActionPerformed

    private void BotaoCadastrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoCadastrarClienteActionPerformed
        viewCadastro.setLocationRelativeTo(null);
        viewCadastro.setController(this.controller);
        controller.apagarTodosCampos();
        viewCadastro.setVisible(true);
    }//GEN-LAST:event_BotaoCadastrarClienteActionPerformed

    private void CampoPesquisaCPFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CampoPesquisaCPFKeyReleased
        try {
            controller.buscarCliente(getCampoPesquisaNome(), getCampoPesquisaCPF(), getTabelaCliente());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro de conexão!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_CampoPesquisaCPFKeyReleased

    private void CampoPesquisaCPFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CampoPesquisaCPFKeyTyped
        if(controllerTexto.formatacaoCPF(evt, getCampoPesquisaCPF().getText())){
            getCampoPesquisaCPF().setText(controllerTexto.mascaraCPF(getCampoPesquisaCPF().getText()));
        }
        else{
            evt.consume();
        }
    }//GEN-LAST:event_CampoPesquisaCPFKeyTyped

    private void CampoPesquisaNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CampoPesquisaNomeKeyReleased
        try {
            controller.buscarCliente(getCampoPesquisaNome(), getCampoPesquisaCPF(), getTabelaCliente());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro na conexão com o BD!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_CampoPesquisaNomeKeyReleased

    private void BotaoLimparCamposClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoLimparCamposClienteActionPerformed
        try {
            controller.limparCamposPesquisa();
            controller.readTabelaCliente(getTabelaCliente());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro na conexão com o BD!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BotaoLimparCamposClienteActionPerformed

    @SuppressWarnings("unchecked")
    private void BotaoAtualizarCliente1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoAtualizarCliente1ActionPerformed
        if(getTabelaCliente().getSelectedRow()!=-1){
            try {
                viewAtualizar.setController(this.controller);
                controller.apagarCamposAtualizar();
                viewAtualizar.setEstadoSelecionado(-1);
                viewAtualizar.setCidadeSelecionada(-1);
                viewAtualizar.setBairroSelecionado(-1);
                controller.comboBoxEstados(viewAtualizar.getCbEstado(), viewAtualizar.getCbUF());
                controller.preencherInfoClienteAtualizar();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro na conexão com o BD!", "Erro", JOptionPane.ERROR_MESSAGE);
            }
            viewAtualizar.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(null, "Nenhum cliente selecionado!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BotaoAtualizarCliente1ActionPerformed

    private void BotaoRemoverClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoRemoverClienteActionPerformed
        if(getTabelaCliente().getSelectedRow()!=-1){
            controller.removerCliente();
        }else{
            JOptionPane.showMessageDialog(null, "Nenhum cliente selecionado!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BotaoRemoverClienteActionPerformed

    private void TabelaClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaClienteMouseClicked
        if(getTabelaCliente().getSelectedRow()!=-1){
            getCampoPesquisaId().setText( getTabelaCliente().getValueAt(getTabelaCliente().getSelectedRow(), 0).toString());
        }
    }//GEN-LAST:event_TabelaClienteMouseClicked

    private void BotaoVerHistoricoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoVerHistoricoClienteActionPerformed
        
        if(getTabelaCliente().getSelectedRow()!=-1){
            HistoricoClienteView viewHistoricoCliente = new HistoricoClienteView();
            viewHistoricoCliente.setController(this.controller);
            viewHistoricoCliente.setId_cliente((int) getTabelaCliente().getValueAt(getTabelaCliente().getSelectedRow(), 0));
            viewHistoricoCliente.readTabelaHistorico();
            viewHistoricoCliente.setLocationRelativeTo(null);
            viewHistoricoCliente.setVisible(true);
        }else{
           JOptionPane.showMessageDialog(null, "Selecione um cliente primeiro!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BotaoVerHistoricoClienteActionPerformed

    public JTextField getCampoPesquisaCPF() {
        return CampoPesquisaCPF;
    }

    public void setCampoPesquisaCPF(JTextField CampoPesquisaCPF) {
        this.CampoPesquisaCPF = CampoPesquisaCPF;
    }

    public JTextField getCampoPesquisaId() {
        return CampoPesquisaId;
    }

    public void setCampoPesquisaId(JTextField CampoPesquisaId) {
        this.CampoPesquisaId = CampoPesquisaId;
    }

    public JTextField getCampoPesquisaNome() {
        return CampoPesquisaNome;
    }

    public void setCampoPesquisaNome(JTextField CampoPesquisaNome) {
        this.CampoPesquisaNome = CampoPesquisaNome;
    }

    public JTable getTabelaCliente() {
        return TabelaCliente;
    }

    public void setTabelaCliente(JTable TabelaCliente) {
        this.TabelaCliente = TabelaCliente;
    }

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotaoAtualizarCliente1;
    private javax.swing.JButton BotaoCadastrarCliente;
    private javax.swing.JButton BotaoLimparCamposCliente;
    private javax.swing.JButton BotaoRemoverCliente;
    private javax.swing.JButton BotaoVerHistoricoCliente;
    private javax.swing.JTextField CampoPesquisaCPF;
    private javax.swing.JTextField CampoPesquisaId;
    private javax.swing.JTextField CampoPesquisaNome;
    private javax.swing.JTable TabelaCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
